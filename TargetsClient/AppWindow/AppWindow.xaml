<events:FocusRoutedEvents x:Class="TargetsClient.AppWindow.AppWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TargetsClient.AppWindow"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:events="clr-namespace:TargetsClient"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:loc="clr-namespace:TargetsClient" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
        mc:Ignorable="d"
        Title="AppWindow" x:Name="window" Height="680" Width="490"  Background="{DynamicResource Background1}">
    <events:FocusRoutedEvents.DataContext >
        <local:AppWindowViewModel x:Name="context2"/>
    </events:FocusRoutedEvents.DataContext>


    <events:FocusRoutedEvents.Effect>
        <BlurEffect x:Name="effect" Radius="0"></BlurEffect>
    </events:FocusRoutedEvents.Effect>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded" >
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation From="20" To="0" Duration="00:00:0.3" Storyboard.TargetName="effect"  Storyboard.TargetProperty="Radius"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
        <EventTrigger RoutedEvent="Window.RoutedDeactivated" >
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation From="0" To="10" Duration="00:00:0.2" Storyboard.TargetName="effect"  Storyboard.TargetProperty="Radius"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
        <EventTrigger RoutedEvent="Window.RoutedActivated" >
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation From="10" To="0" Duration="00:00:0.1" Storyboard.TargetName="effect"  Storyboard.TargetProperty="Radius"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
    </Window.Triggers>

    <Grid VerticalAlignment="Stretch" >
        <Grid.RowDefinitions>
            <RowDefinition Height="100"></RowDefinition>
            <RowDefinition Height="160"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="60"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Border Grid.ColumnSpan="3" Height="100"  Background="{DynamicResource Background2}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <ei:CallMethodAction TargetObject="{Binding ElementName=window}" MethodName="DragMove"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock Text="Hello " FontSize="35" Foreground="White"  HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                <TextBlock Text="{Binding User.Email, UpdateSourceTrigger=PropertyChanged}" FontSize="35" Foreground="White"  HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                <TextBlock Text=" :) " FontSize="35" Foreground="White"  HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
            </StackPanel>
        </Border>

        <StackPanel Grid.Row="1" Grid.Column="2" >
            <Button  Content="Logout" Width="160"  Margin="0,10,0,0" HorizontalAlignment="Right"  Command="{Binding LogoutCmd}" CommandParameter="{Binding ElementName=window}"></Button>
            <Button  Content="Remove account" Width="160" HorizontalAlignment="Right" Margin="0,10,0,0"  Style="{DynamicResource RemoveButton}"  Command="{Binding RemoveUserCmd}" CommandParameter="{Binding ElementName=window}"></Button>
        </StackPanel>
        <Border Visibility="Collapsed" Grid.Row="0" Grid.Column="0" Width="80" Height="80" VerticalAlignment="Top" HorizontalAlignment="Left" BorderThickness="4" BorderBrush="{DynamicResource TextBoxBackground}" CornerRadius="40" Margin="20,10,0,0" Background="{DynamicResource Background2}">
            <TextBlock Foreground="{DynamicResource TextBoxBackground}" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center">Your image</TextBlock>
        </Border>
        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="20,10,0,0" >
            <TextBlock FontSize="20" FontWeight="Bold" Foreground="{DynamicResource TextBoxBackground}">Summary:</TextBlock>
            <TextBlock FontSize="14" FontWeight="Bold" Foreground="{DynamicResource TextBoxBackground}">Sorry, not implemented yet...</TextBlock>
        </StackPanel>



        <TextBlock Text="Those are your projects..." FontSize="22" Foreground="{DynamicResource TextBoxBackground}" Grid.Row="1" Grid.ColumnSpan="3" Margin="20,10,20,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"></TextBlock>

        <TreeView x:Name="tree" Grid.Row="2" Margin="0,0,10,10" ScrollViewer.HorizontalScrollBarVisibility="Hidden"  Grid.ColumnSpan="3" HorizontalAlignment="Stretch"  ItemsSource="{Binding Proj, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch"  Background="{DynamicResource Background1}">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type loc:Project}" ItemsSource="{Binding Steps}" >
                    <Border x:Name="border"  Height="40" Background="Blue" CornerRadius="20" Margin="0,20,0,0" >
                        <StackPanel Orientation="Horizontal" Width="430"  HorizontalAlignment="Stretch" Margin="0,0">
                            <StackPanel Orientation="Vertical" Width="400">
                                <TextBlock Text="{Binding Title}" FontSize="16" VerticalAlignment="Center"  HorizontalAlignment="Left"  Foreground="White" Margin="20,0"  />
                                <TextBlock Text="{Binding Description}" FontSize="10"   VerticalAlignment="Center"  HorizontalAlignment="Left" Foreground="White" Margin="20,0" ></TextBlock>
                            </StackPanel>
                            <Border Width="20" Height="20" CornerRadius="10" Background="{DynamicResource Foreground2}">
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource Foreground1}" Text="{Binding Steps.Count}"></TextBlock>
                            </Border>
                        </StackPanel>
                    </Border>
                    <HierarchicalDataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false" >
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground1}"></Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background2}"></Setter>
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type loc:Step}" x:Name="step">
                    <Border x:Name="border" Height="40"  Background="{DynamicResource Background3}" CornerRadius="20" Margin="0,5,0,0" >
                        <StackPanel  Orientation="Horizontal" Width="370"  HorizontalAlignment="Stretch" Margin="20,0" >
                            <StackPanel Orientation="Vertical" Width="335">
                                <TextBlock x:Name="title" Text="{Binding Title}" FontSize="16" VerticalAlignment="Center"  HorizontalAlignment="Left"  Foreground="White"  />
                                <TextBlock x:Name="desc" Text="{Binding Description}" FontSize="10" VerticalAlignment="Center"  HorizontalAlignment="Left" Foreground="White"  ></TextBlock>
                            </StackPanel>
                            <CheckBox x:Name="check" IsChecked="{Binding Completed ,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Right" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding ElementName=tree, Path=DataContext.ChangeStateCmd}" CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding ElementName=tree, Path=DataContext.ChangeStateCmd}" CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </StackPanel>
                    </Border>
                    <HierarchicalDataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground3}"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false" >
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background2}"></Setter>
                        </Trigger>


                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition SourceName="check" Property="IsChecked" Value="true"></Condition>
                                <Condition Property="IsMouseOver" Value="false"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background3}"></Setter>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition SourceName="check" Property="IsChecked" Value="true"></Condition>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background3}"></Setter>
                        </MultiTrigger>

                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition SourceName="check" Property="IsChecked" Value="false"></Condition>
                                <Condition Property="IsMouseOver" Value="false"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground2}"></Setter>
                            <Setter  TargetName="title"   Property="Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                            <Setter  TargetName="desc"   Property="Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition SourceName="check" Property="IsChecked" Value="false"></Condition>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground2}"></Setter>
                            <Setter  TargetName="title"   Property="Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                            <Setter  TargetName="desc"   Property="Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background2}"></Setter>
                            <Setter TargetName="title" Property="Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                            <Setter TargetName="desc" Property="Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                        </DataTrigger>



                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>

        <Button Grid.Row="3" Grid.Column="0" Content="New" Command="{Binding NewCmd}" ></Button>
        <Button Grid.Row="3" Grid.Column="1" Content="Delete" Command="{Binding DeleteCmd}" CommandParameter="{Binding ElementName=tree, Path=SelectedItem}"></Button>
        <Button Grid.Row="3" Grid.Column="2" Content="Edit" Command="{Binding EditCmd}" CommandParameter="{Binding ElementName=tree, Path=SelectedItem}"></Button>

    </Grid>
</events:FocusRoutedEvents>
