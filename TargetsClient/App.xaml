<Application x:Class="TargetsClient.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TargetsClient"
                     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             StartupUri="LoginWindow/LoginWindow.xaml" >
    <Application.Resources>


        <SolidColorBrush x:Key="Background1">#2B2B2C</SolidColorBrush>
        <SolidColorBrush x:Key="Background2">#1499E3</SolidColorBrush>
        <SolidColorBrush x:Key="Background3">#14E399</SolidColorBrush>
        <SolidColorBrush x:Key="Background4">#E31499</SolidColorBrush>
        <SolidColorBrush x:Key="Background5">#E39914</SolidColorBrush>
        <SolidColorBrush x:Key="Foreground1">#525253</SolidColorBrush>
        <SolidColorBrush x:Key="Foreground2">#ACACAB</SolidColorBrush>
        <SolidColorBrush x:Key="Foreground3">#4EB4E8</SolidColorBrush>
        <SolidColorBrush x:Key="Foreground4">#E8B44E</SolidColorBrush>
        <SolidColorBrush x:Key="Foreground5">#B4E84E</SolidColorBrush>
        <SolidColorBrush x:Key="TextBoxBackground">#EBEAE8</SolidColorBrush>

        <Style TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold"></Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontWeight" Value="Bold"></Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{DynamicResource Background2}" BorderThickness="0" MinWidth="80" Height="40" CornerRadius="20" Margin="10,0">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="7" Direction="330" Color="Black" ShadowDepth="4" Opacity="0.3"></DropShadowEffect>
                            </Border.Effect>
                            <ContentPresenter x:Name="cp" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource TextBoxBackground}" Margin="20,0"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground2}"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="{DynamicResource Foreground1}"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground3}"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground3}"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RemoveButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{DynamicResource Background5}" BorderThickness="0" MinWidth="80" Height="40" CornerRadius="20" Margin="10,0">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="7" Direction="330" Color="Black" ShadowDepth="4" Opacity="0.3"></DropShadowEffect>
                            </Border.Effect>
                            <ContentPresenter x:Name="cp" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource TextBoxBackground}" Margin="20,0"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground2}"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="{DynamicResource Foreground1}"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground4}"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground4}"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LogoutButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{DynamicResource Background3}" BorderThickness="0" MinWidth="80" Height="40" CornerRadius="20" Margin="10,0">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="7" Direction="330" Color="Black" ShadowDepth="4" Opacity="0.3"></DropShadowEffect>
                            </Border.Effect>
                            <ContentPresenter x:Name="cp" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource TextBoxBackground}" Margin="20,0"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground2}"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="{DynamicResource Foreground1}"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground5}"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground5}"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid Margin="10,0">
                            <Border x:Name="border" Background="White" BorderBrush="White" BorderThickness="0" CornerRadius="20"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="20,0" VerticalAlignment="Center" />
                            <Label HorizontalAlignment="Center" HorizontalContentAlignment="Center" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Gray" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Grid Margin="10,0">
                            <Border x:Name="border" Background="White" BorderBrush="White" BorderThickness="0" CornerRadius="20"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="20,0" VerticalAlignment="Center" />
                            <Label HorizontalAlignment="Center" HorizontalContentAlignment="Center" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Visible" Foreground="Gray" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
 
                <Grid Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"></RowDefinition>
                </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border" CornerRadius="20,20,20,20" Height="40"     Background="{StaticResource Background2}" />
                <Border Grid.Column="1"  Name="ButtonBorder" Height="40"  CornerRadius="0,20,20,0"  Background="{StaticResource Background2}" />
                <Path Name="Arrow" Grid.Column="1"  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" HorizontalAlignment="Center" Fill="{DynamicResource TextBoxBackground}" VerticalAlignment="Center" />
                </Grid>
                    <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource Foreground3}"/>
                    <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource Foreground3}"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">

                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource Foreground2}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource Foreground2}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style  TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="10,0"></Setter>
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource CustomComboBoxItem}"></Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">

                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False"  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Height="15" Margin="20,0,20,0"
                              HorizontalAlignment="Center" VerticalAlignment="Center"                              
                              Content="{TemplateBinding SelectedValue}" TextBlock.Foreground="{DynamicResource TextBoxBackground}" />



                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"  Margin="0" 
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" Background="Transparent"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="{DynamicResource Background1}" Margin="0, 1, 0, 0" Padding="0"  CornerRadius="20"
                       />
                                    <ScrollViewer SnapsToDevicePixels="True" Margin="0" Padding="0"  >
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" Margin="0" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>

                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomComboBoxItem" TargetType="ComboBoxItem">
            <Setter Property="Margin" Value="0"></Setter>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="border" Height="40" Background="{DynamicResource Background2}" Padding="10" Margin="0,5,0,0" CornerRadius="20">
                            <TextBlock x:Name="text" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="10,0">
                                <ContentPresenter  Content="{Binding Title}"  VerticalAlignment="Center"  HorizontalAlignment="Center"  TextBlock.Foreground="{DynamicResource TextBoxBackground}"></ContentPresenter>
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Foreground3}"></Setter>
                                <Setter TargetName="text" Property="Foreground" Value="{DynamicResource TextBoxBackground}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>



        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style  TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" IsEnabled="False" Visibility="Hidden" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="CheckBox" >
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Border  Height="30" Width="30" x:Name="outerEllipse" BorderThickness="2" BorderBrush="{DynamicResource Background3}" CornerRadius="15"></Border>
                            <Border Height="30" Width="30" x:Name="highlightCircle" Background="Green" CornerRadius="15"></Border>
                            <Path x:Name="mark"  Data="M9.07743946676476E-09,4.31805768640244L4.68740335877841,8.86361158398516C4.68740335877841,8.86361158398516,16.3281249985376,-2.42451336648723,16.3281249985376,-2.42451336648723L14.0622100581796,-4.77304938341948 4.68740335877846,4.31805791992662 2.22656251699567,1.93164208562579z"
                                  Width="20"     
                                  Height="15"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center" Stretch="Fill"
                                           Stroke="{DynamicResource Foreground1}"
                                          StrokeEndLineCap="Round"
                                          StrokeStartLineCap="Round"
                                          StrokeThickness="3"></Path>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource Background3}"></Setter>
                                <Setter TargetName="mark" Property="Stroke" Value="{DynamicResource TextBoxBackground}"></Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource Foreground2}"></Setter>
                                <Setter TargetName="mark" Property="Stroke" Value="{DynamicResource Foreground1}"></Setter>
                                <Setter TargetName="content" Property="TextBlock.Foreground" Value="{DynamicResource Foreground1}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="RadioButton" >
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Border  Height="40" Width="90" x:Name="outerEllipse" BorderThickness="0" BorderBrush="{DynamicResource Background3}" CornerRadius="20"></Border>
                            <Border Height="40" Width="90" x:Name="highlightCircle" Background="Green" CornerRadius="20"></Border>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource Background3}"></Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource Foreground2}"></Setter>
                                <Setter TargetName="content" Property="TextBlock.Foreground" Value="White"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
